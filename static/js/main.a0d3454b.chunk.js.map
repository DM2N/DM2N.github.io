{"version":3,"sources":["icons/svg sync nonrecursive //.svg$","icons/svg/battery.svg","icons/svg/singal.svg","icons/svg/wifi.svg","icons/index.ts","utils/tools.ts","components/TimeBar/index.tsx","components/SvgIcon/index.tsx","components/StatusBar/index.tsx","layouts/Mobile/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","symbol","add","requireContext","require","nowTime","now","Date","hour","getHours","minute","getMinutes","TimeBar","props","timer","state","time","this","setInterval","setState","clearInterval","className","Component","SvgIcon","path","iconClass","styleExternalIcon","mask","WebkitMask","svgClass","iconName","test","style","aria-hidden","xlinkHref","StatusBar","statusIcon","icon","Mobile","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d3454b.chunk.js","sourcesContent":["var map = {\n\t\"./battery.svg\": 17,\n\t\"./singal.svg\": 18,\n\t\"./wifi.svg\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","import SpriteSymbol from \"../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"icon-battery\",\n  \"use\": \"icon-battery-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"icon-battery\\\"><path d=\\\"M800 256c35.346 0 64 28.654 64 64v64h32c35.346 0 64 28.654 64 64v128c0 35.346-28.654 64-64 64h-32v64c0 35.346-28.654 64-64 64H128c-35.346 0-64-28.654-64-64V320c0-35.346 28.654-64 64-64h672z m96 320V448h-96V320H128v384h672V576h96z\\\" p-id=\\\"3432\\\" /><path d=\\\"M164 356m24 0l552 0q24 0 24 24l0 264q0 24-24 24l-552 0q-24 0-24-24l0-264q0-24 24-24Z\\\" p-id=\\\"3433\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"icon-singal\",\n  \"use\": \"icon-singal-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"icon-singal\\\"><path d=\\\"M0 704h208v192H0zM272 512h208v384H272zM544 288h208v608H544zM816 128h208v768H816z\\\" p-id=\\\"4941\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"icon-wifi\",\n  \"use\": \"icon-wifi-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"icon-wifi\\\"><path d=\\\"M214 554c166-164 432-164 596 0L726 640C608 522 416 522 298 640zM384 726c70-70 186-70 256 0l-128 128zM42 384c260-258 682-258 940 0L896 470c-212-212-556-212-768 0z\\\" p-id=\\\"2638\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","const req = (require as any).context('./svg', false, /\\.svg$/)\nconst requireAll = (requireContext: any) => requireContext.keys().map(requireContext)\nrequireAll(req)\n\nexport {}","export const nowTime = (): string => {\n  const now = new Date()\n\n  const hour = now.getHours()\n  const minute = now.getMinutes()\n  return (hour < 10 ? '0' + hour : hour) + ':' + (minute < 10 ? '0' + minute : minute)\n}","import React, { Component } from 'react'\n\nimport './index.scss'\nimport { nowTime } from '../../utils/tools'\n\ninterface IProps {}\n\ninterface IState {\n  time: string\n}\n\nexport default class TimeBar extends Component<IProps, IState> {\n  private timer: any\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      time: nowTime()\n    }\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(\n      () => {\n        this.setState({\n          time: nowTime()\n        })\n      },\n      60000\n    )\n  }\n\n  componentWillUnmount() {\n    this.timer && clearInterval(this.timer)\n  }\n\n  render() {\n    return (\n      <span className=\"time_bar\">{ this.state.time }</span>\n    )\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\n\nconst SvgIcon = ({ iconClass, className }: any) => {\n\n  const styleExternalIcon = {\n    mask: `url(${iconClass}) no-repeat 50% 50%`,\n    WebkitMask: `url(${iconClass}) no-repeat 50% 50%`\n  }\n\n  const isExternal = (path: string) => /^(https?:|mailto:|tel:)/.test(path)\n\n  const svgClass = className ? 'svg-icon ' + className : 'svg-icon'\n\n  const iconName = `#icon-${iconClass}`\n\n  return (\n    <div>\n      {isExternal(iconClass) ?\n        <div style={styleExternalIcon} className={`svg-external-icon ${svgClass}`} /> :\n        <svg className={svgClass} aria-hidden=\"true\">\n          <use xlinkHref={iconName} />\n        </svg>\n      }\n    </div>\n  )\n}\n\nSvgIcon.propTypes = {\n  iconClass: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n\nexport default SvgIcon","import React, { Component } from 'react'\n\nimport './index.scss'\nimport TimeBar from '../TimeBar'\nimport SvgIcon from '../SvgIcon'\n\ninterface IProps {}\n\ninterface IState {}\n\nexport default class StatusBar extends Component<IProps, IState> {\n  private readonly statusIcon: Array<string> = ['wifi', 'singal', 'battery']\n\n  render() {\n    return (\n      <div id=\"status_bar\">\n        <TimeBar />\n        <div className=\"status_icons\">\n          {\n            this.statusIcon.map((icon: string) => \n              <SvgIcon\n                iconClass={icon}\n                key={icon}\n                className=\"status_icon\"\n              />\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nimport './index.scss'\nimport StatusBar from '../../components/StatusBar'\n\nexport default class Mobile extends Component {\n  render() {\n    return (\n      <>\n        <div id=\"mobile\">\n          <StatusBar></StatusBar>\n        </div>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\n\nimport './App.scss'\nimport Mobile from './layouts/Mobile'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div id=\"app\">\n        <Mobile />\n      </div>\n    )\n  }\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)  \n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './icons'\n\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}